<?php
/**
 * handles codewar parsing and output
 * codewar.module
 * 12/13/12 Mojiferous
 */

require_once('code_bot.inc');
require_once('code_map.inc');

/**
 * implements hook_menu()
 * @todo add proper access callbacks to check user access to node
 */
function codewar_menu() {
  $items = array();

  $items['node/%node/run'] = array(
    'title' => 'Run Code',
    'description' => t('Run code for bot'),
    'page callback' => 'codewar_run_code',
    'page arguments' => array(1),
    'access callback' => true,
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
  );

  $items['code/%/step'] = array(
    'title' => 'Process',
    'description' => t('Process code for bot'),
    'page callback' => 'codewar_process_code',
    'page arguments' => array(1),
    'access callback' => true,
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * builds the code from the body of a node into a json array and saves it to the output field, returns the resulting bot
 * @param $node
 * @return code_bot
 */
function codewar_build_code($node) {
  //load the node body
  $this_body = field_get_items('node', $node, 'body');
  $raw_body = '';

  if(isset($this_body[0])) {
    $raw_body = $this_body[0]['value'];
  }

  //divide the body into lines
  $body_parts = preg_split("/\r\n|\n|\r/", $raw_body);

  //parse the code and transform it into a json array, this is the "built code"
  $this_code = new code_bot($body_parts);
  $this_code->parse_code();

  $code_array = json_encode($this_code->code_array);

  $this_code->code_array = (array)$code_array;

  //save the new value onto the node
  $node->field_output[LANGUAGE_NONE][0]['value'] = $code_array;
  node_save($node);

  return $this_code;
}

/**
 * run the codebot
 * @param $node
 * @return string
 */
function codewar_run_code($node) {
  //build the current code
  $this_code = codewar_build_code($node);

  $this_map = new code_map();

  $this_map->add_new_bot($this_code, 100);

  //the session and cache data for this map uses the current user and the node ids to keep everything unique
  //and to prevent collisions
  global $user;
  $cache_vals = $user->uid.'*'.$node->nid;

  $cache_data = json_encode($this_map);

  //set session variables and cache
  $_SESSION['code_bot*'.$cache_vals] = $cache_data;

  cache_clear_all('code_bot*'.$cache_vals, 'cache', true);
  cache_set('code_bot*'.$cache_vals, $cache_data, 'cache');

  drupal_add_js(array('cache_val' => $cache_vals), 'setting');

  $path = drupal_get_path('module', 'codewar');
  drupal_add_js($path.'/js/codebot.js');

  return '<div id="code_result">CODE:<br/></div>';
}

/**
 * process ajax call from js
 * @param $session_value
 * @return string
 */
function codewar_process_code($session_value) {
  $ret_val = '00';

  $session_data = false;

  if(isset($_SESSION['code_bot*'.$session_value])) {
    $session_data = $_SESSION['code_bot*'.$session_value];
  } else {
    $session_data = cache_get('code_bot*'.$session_value);
  }

  if($session_data) {
    //there was data in either the session or the cache
    $this_map = json_decode($session_data);
    $this_map = new code_map($this_map);
    $this_map->handle_bot_turns();

    $session_data = json_encode($this_map);
  }

  $_SESSION['code_bot*'.$session_value] = $session_data;

  return json_encode($ret_val);
  drupal_json_output($ret_val);
}

/**
 * return the code for a specific codebot
 * @param object $node
 * @return string
 */
function codewar_render_code($node) {
  $this_body = field_get_items('node', $node, 'body');
  $raw_body = '';

  if(isset($this_body[0])) {
    $raw_body = $this_body[0]['value'];
  }

  //divide the body into lines
  $body_parts = preg_split("/\r\n|\n|\r/", $raw_body);

  $output = '';

  $this_code = new code_bot($body_parts);
  $this_code->parse_code();
  $code_array = $this_code->code_array;


  dpm($code_array, 'code array');

  return $output;
}